# -*- coding: utf-8 -*-
"""Chat_Bot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mTJe045rCfvNLBsxckqREvdQ8J4hNywU
"""

# Import_Libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as ps
import random
import pickle

# Import_dataset
data = ps.read_json('d:/Work/NLP-ChatBot/Python/ChatBot/intents.json')

# Clean_Data
import re
import nltk

nltk.download('stopwords')
nltk.download('punkt')
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from nltk.stem import WordNetLemmatizer

corpus = []
x = []
y = []
for intent in data['intents']:
    for pattern in intent['patterns']:
        tokens = re.sub('[^a-zA-Z]', ' ', pattern)
        tokens = tokens.lower()
        tokens = tokens.split()
        ps = PorterStemmer()
        all_words = stopwords.words('english')
        tokens = [ps.stem(words) for words in tokens if not words in set(all_words)]
        tokens = ' '.join(tokens)
        corpus.append(tokens)
        y.append(intent['tag'])
# Bag_of_word model
from sklearn.feature_extraction.text import CountVectorizer

cv = CountVectorizer(max_features=20)
x = cv.fit_transform(corpus)

pickle.dump(cv, open('bow.sav', 'wb'))

# train_test_split
from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)

# apply random_Forest_Classifier model
from sklearn.ensemble import RandomForestClassifier

classifier = RandomForestClassifier(n_estimators=100, criterion="entropy")

hist = classifier.fit(x_train, y_train)
pickle.dump(hist, open('model.sav', 'wb'))
# y_pred = classifier.predict(x_test)
#
# # making confusion matrics
# from sklearn.metrics import confusion_matrix, accuracy_score
#
# cm = confusion_matrix(y_test, y_pred)
# print(accuracy_score(y_test, y_pred))
#
# # Take the user input and run chatbot
# print('Enter quit if you do not want to do chat with chatbot')
